// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`fix (位f.位n.if (eq n zero) then one else mul n (f (sub n one))) 1`] = `
"const eq = x => y => x === y | 0;

const div = x => y => x / y;

const mul = x => y => x * y;

const sub = x => y => x - y;

const add = x => y => x + y;

const one = 1;
const zero = 0;

const fix = f => {
  const x = x => f(v => x(x)(v));

  return f(v => x(x)(v));
};

const const_ = x => y => x;

const id = x => x;

fix(f => n => eq(n)(zero) ? one : mul(n)(f(sub(n)(one))));"
`;

exports[`fix (位f.位n.if (eq n zero) then zero else if (eq n one) then one else add (f (sub n one)) (f (sub (sub n one) one))) 1`] = `
"const eq = x => y => x === y | 0;

const div = x => y => x / y;

const mul = x => y => x * y;

const sub = x => y => x - y;

const add = x => y => x + y;

const one = 1;
const zero = 0;

const fix = f => {
  const x = x => f(v => x(x)(v));

  return f(v => x(x)(v));
};

const const_ = x => y => x;

const id = x => x;

fix(f => n => eq(n)(zero) ? zero : eq(n)(one) ? one : add(f(sub(n)(one)))(f(sub(sub(n)(one))(one))));"
`;
